<%@ page language="java" contentType="text/html; charset=utf-8"
    pageEncoding="utf-8"%>
<%@ page import="doran.db.connection.DBConnection" %>
<%@page import="java.io.File"%> 
<%@page import="java.util.Enumeration"%> 
<%@page import="org.apache.commons.io.FileUtils"%> 
<%@page import="com.oreilly.servlet.multipart.DefaultFileRenamePolicy"%> 
<%@page import="com.oreilly.servlet.MultipartRequest"%> 
<%@ page import="java.sql.*"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf0-8">
<title>Insert title here</title>
</head>
<body>
<%
	request.setCharacterEncoding("utf-8");

	String uploadPath = request.getRealPath("/uploadFile"); 
	System.out.println("절대경로 : " + uploadPath + "<br/>"); 

	int maxSize = 1024 * 1024 * 10; // 한번에 올릴 수 있는 파일 용량 : 10M로 제한 
	
	String fileName1 = ""; // 중복처리된 이름 
	String originalName1 = ""; // 중복 처리전 실제 원본 이름 
	long fileSize = 0; // 파일 사이즈 
	String fileType = ""; // 파일 타입 
	
	MultipartRequest multi = null; 
	File file = null; 
	
	//db연결
	Connection conn=null;
    PreparedStatement pstmt=null;
    
    System.out.println("request getContentType : " + request.getContentType());
	
	try{ 
		// request,파일저장경로,용량,인코딩타입,중복파일명에 대한 기본 정책 
		multi = new MultipartRequest(request,uploadPath,maxSize,"utf-8",new DefaultFileRenamePolicy()); 
		
		String title=request.getParameter("title");
		String writer=request.getParameter("writer");
		String publisher=request.getParameter("publisher");
		String publish_date=request.getParameter("publish_date");
		int amount=Integer.parseInt(request.getParameter("amount"));
		int price=Integer.parseInt(request.getParameter("price"));
		String genre=request.getParameter("genre");
		String translator=request.getParameter("translator");
		
		switch(genre){
			case "000" : genre="총류"; break;
			case "100" : genre="철학"; break;
			case "200" : genre="종교"; break;
			case "300" : genre="사회과학"; break;
			case "400" : genre="순수과학"; break;
			case "500" : genre="기술과학"; break;
			case "600" : genre="예술"; break;
			case "700" : genre="언어"; break;
			case "800" : genre="문학"; break;
			case "900" : genre="역사"; break;
			default: genre="분류 없음"; break;
		}

		// 전송한 전체 파일이름들을 가져옴 
		//Enumeration files = multi.getFileNames(); 
		file = multi.getFile("file"); 

		/* while(files.hasMoreElements()){ 
		// form 태그에서 <input type="file" name="여기에 지정한 이름" />을 가져온다. 
		String file1 = (String)files.nextElement(); // 파일 input에 지정한 이름을 가져옴 
		// 그에 해당하는 실재 파일 이름을 가져옴 
		originalName1 = multi.getOriginalFileName(file1); 
		// 파일명이 중복될 경우 중복 정책에 의해 뒤에 1,2,3 처럼 붙어 unique하게 파일명을 생성하는데 
		// 이때 생성된 이름을 filesystemName이라 하여 그 이름 정보를 가져온다.(중복에 대한 처리) 
		fileName1 = multi.getFilesystemName(file1); 
		// 파일 타입 정보를 가져옴 
		fileType = multi.getContentType(file1); 
		// input file name에 해당하는 실재 파일을 가져옴 
		File file = multi.getFile(file1); 
		// 그 파일 객체의 크기를 알아냄 
		fileSize = file.length(); 
		} */ 
		// 커넥션 연결 
		conn=DBConnection.getCon(); 
		
		StringBuffer sql = new StringBuffer(" INSERT INTO book (title, writer, publisher, publish_date, stock, price, genre, translator, image) VALUES (?,?,?,?,?,?,?,?,?) "); 
		byte[] buf = FileUtils.readFileToByteArray(file); 
		pstmt = conn.prepareStatement(sql.toString()); 

		for(int i = 0; i<=10; i++) { 
		pstmt.setString(1, title); 
		pstmt.setString(2, writer); 
		pstmt.setString(3, publisher);
		pstmt.setString(4, publish_date);
		pstmt.setInt(5, amount);
		pstmt.setInt(6, price);
		pstmt.setString(7, genre);
		pstmt.setString(8, translator);
		pstmt.setBytes(9, buf);
		
		pstmt.addBatch(); 
		pstmt.clearParameters(); 
		if(i % 2 == 0){ 
		System.out.println("batch-excute:"+i); 
		pstmt.executeBatch(); 
		} 
		} 
		pstmt.executeBatch(); 
		}catch(Exception e){ 
		e.printStackTrace(); 
		} 
%>
</body>
</html>